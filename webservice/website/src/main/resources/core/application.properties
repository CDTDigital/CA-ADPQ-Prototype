spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.continueOnError: true
spring.datasource.initialize: false
spring.datasource.initialSize: 0
spring.datasource.timeBetweenEvictionRunsMillis: 5000
spring.datasource.minEvictableIdleTimeMillis: 5000
spring.datasource.minIdle: 0

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

entitymanager.packagesToScan: com.intimetec.crns

spring.resources.staticLocations=/WEB-INF/views/
spring.mvc.view.prefix=/WEB-INF/views
spring.mvc.view.suffix=.html

# Google API URL to get address
google.api.url=https://maps.googleapis.com/maps/api/geocode/json
google.api.apikey=AIzaSyB6OlDwSijH738ENaKp4npwTd2XL2NlVus


#References for sending mail
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=resident.notification@gmail.com
spring.mail.password=Global@2012

fcm.api.url=https://fcm.googleapis.com/fcm/send
fcm.api.key=AIzaSyCgfRTY1aFpjQxjMrGbLwhF3zg3C31VsSk
fcm.api.projectKey=450574513627